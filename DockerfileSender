# Stage 1: Build the shared module and install it in the local Maven repository
FROM eclipse-temurin:21 as base

# Install Maven
RUN apt-get update && apt-get install -y maven && rm -rf /var/lib/apt/lists/*

# Set the working directory
WORKDIR /app

# Copy the parent POM and module POMs
COPY ./pom.xml /app/
COPY ./sender/pom.xml /app/sender/
COPY ./receiver/pom.xml /app/receiver/

# Copy all module source codes
COPY ./shared /app/shared
COPY ./sender /app/sender
COPY ./receiver /app/receiver

# Install the shared module in the local Maven repository
RUN mvn -f /app/pom.xml clean install -pl shared -am

# Stage 2: Build the sender application using the shared module
FROM base as sender-builder

# Build the sender module
RUN mvn -f /app/sender/pom.xml clean package

# Stage 3: Create a lightweight runtime image for the sender application
# TODO change DockerfileSender runtime image from temurin-jre to jlink custom image
FROM eclipse-temurin:21-jre as sender

# Set the working directory
WORKDIR /app

# Copy the built JAR from the builder stage
COPY --from=sender-builder /app/sender/target/sender-0.0.1-SNAPSHOT.jar /app/sender.jar

# Expose the application port
EXPOSE 8080

# Run the application
CMD ["java", "-jar", "/app/sender.jar"]
